apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  annotations:
    description: Enforce that there's a default sidecar CR to restrict the scope of egress traffic. 
  name: meshsidecarhosts
spec:
  crd:
    spec:
      names:
        kind: MeshSidecarHosts
      validation:
        openAPIV3Schema:
          type: object
          properties:
            rootNamespace:
              description: Istio root namespace, default value is "istio-system" if not specified.
              type: string
  targets:
  - target: admission.k8s.gatekeeper.sh
    rego: |-
      package istio.security.sidecars

      violation[{"msg": msg}] {
        root_ns := object.get(object.get(input, "parameters", {}), "rootNamespace", "istio-system")
        input.review.object.metadata.name == root_ns
        not namespace_has_restricting_sidecar(root_ns)
        msg := sprintf("Root namespace <%v> does not have a Sidecar to restrict sidecar traffic to the same namespace and istio-system namespace", [root_ns])
      }

      namespace_has_restricting_sidecar(ns) {
        sc := data.inventory.namespace[ns][_].Sidecar[_]
        egress := sc.spec.egress[_]
        hosts := egress.hosts[_]
        containsHost(hosts, "./*")
        containsHost(hosts, "istio-system/*")
      }

      containsHost(hosts, host) {
        hosts[_] = host
      }
